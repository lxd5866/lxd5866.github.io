<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>k8s on 沧海的博客</title>
    <link>https://lxd5866.github.io/categories/k8s/</link>
    <description>Recent content in k8s on 沧海的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 07 Dec 2020 19:36:45 +0800</lastBuildDate><atom:link href="https://lxd5866.github.io/categories/k8s/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>helm3 和 kustomize </title>
      <link>https://lxd5866.github.io/post/2020-12-07-1/</link>
      <pubDate>Mon, 07 Dec 2020 19:36:45 +0800</pubDate>
      
      <guid>https://lxd5866.github.io/post/2020-12-07-1/</guid>
      <description>helm3 kustomize 背景 之前一直用的时kustomize 管理 yaml，而不太喜欢使用helm，因为感觉它对外对外是一个黑盒，用起来不太放心。 而istio自 1.8 版本开始，重新添加 helm3为默认的管理工具，最近在看的 openkruise 也是使用helm管理，所以还是决定花点时间看一下。</description>
    </item>
    
    <item>
      <title>k8s Docker Runtime架构</title>
      <link>https://lxd5866.github.io/post/2020-12-09-1/</link>
      <pubDate>Mon, 07 Dec 2020 19:36:45 +0800</pubDate>
      
      <guid>https://lxd5866.github.io/post/2020-12-09-1/</guid>
      <description>背景 k8s 1.20 release note中有个改变的针对Dockershim的，自这个版本起不在推荐使用docker做runtime。 Docker as an underlying runtime is being deprecated. Docker-produced images will continue to work in your cluster with all runtimes, as they always have. The Kubernetes community has written a blog post about this in detail with a dedicated FAQ page for it. 所以详细了解了一下 Dockershim 的历史。 本文链接：https://blog.csdn.net/</description>
    </item>
    
    <item>
      <title>git 代理</title>
      <link>https://lxd5866.github.io/post/2020-12-04-1/</link>
      <pubDate>Fri, 04 Dec 2020 00:37:55 +0800</pubDate>
      
      <guid>https://lxd5866.github.io/post/2020-12-04-1/</guid>
      <description>git 代理设置 背景 下载github资源时，会因为墙和dns等原因导致git下载速度感人,游戏体验极差。 分辨需要设置的代理 HTTP 形式： git clone https://github.com/owner/git.git SSH 形式： git clone git@github.com:owner/git.git 一、HTTP 形式 走 HTTP 代理 git config &amp;ndash;global http.proxy &amp;ldquo;http://127.0.0.1:8080&amp;rdquo; git config &amp;ndash;global https.proxy &amp;ldquo;http://127.0.0.1:8080&amp;rdquo; 走 socks5 代理（如 Shadowsocks） git config &amp;ndash;global http.proxy &amp;ldquo;socks5://127.0.0.1:1080&amp;rdquo; git config &amp;ndash;global https.proxy &amp;ldquo;socks5://127.0.0.1:1080&amp;rdquo; 取消设置 git config &amp;ndash;global &amp;ndash;unset http.proxy git config &amp;ndash;global &amp;ndash;unset https.proxy 二、SS</description>
    </item>
    
  </channel>
</rss>
